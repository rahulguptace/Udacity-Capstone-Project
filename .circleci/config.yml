version: 2.1

orbs:
  aws-eks: circleci/aws-eks@2.2.0
  kubernetes: circleci/kubernetes@1.3

jobs:
  build:
    docker:
      # Use the same Docker base as the project
      - image: python:3.7.3-stretch
    working_directory: ~/repo
    steps:
      - checkout
      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "requirements.txt" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      # run install
      - run:
          name: install dependencies
          command: |
            python3 -m venv capstone
            . capstone/bin/activate
            make install
            # Install hadolint
            wget -O /bin/hadolint https://github.com/hadolint/hadolint/releases/download/v1.16.3/hadolint-Linux-x86_64 &&\
            chmod +x /bin/hadolint

      - save_cache:
          paths:
            - ./capstone
          key: v1-dependencies-{{ checksum "requirements.txt" }}

       # run lint
      - run:
          name: run lint
          command: |
            . capstone/bin/activate
            make lint

  build-push-image:
    machine: true
    working_directory: ~/repo
    steps:
    - checkout
    - run:
        name: Build Image
        command: |
          imgtag=$IMAGE_TAG
          dockerpath=$DOCKER_PATH

          docker build -t $imgtag .
          echo 'The existing docker images:'
          docker images

    - run:
        name: Tag & Push Image
        command: |
          imgtag=$IMAGE_TAG
          dockerpath=$DOCKER_PATH

          docker tag $imgtag $dockerpath

          echo $DOCKER_PASS | docker login --username $DOCKER_USER --password-stdin

          docker push $dockerpath
          echo 'Push successful'

  deploy-cluster:
    docker:
      - image: cimg/python:3.10
    parameters:
      cluster-name:
        description: |
          Name of the EKS cluster
        type: string
    steps:
    - kubernetes/install
    - aws-eks/update-kubeconfig-with-authenticator:
        cluster-name: << parameters.cluster-name >>
        install-kubectl: true
    - run:
        command: |
          kubectl get nodes
          kubectl get deploy,rs,svc,pods
    - kubernetes/create-or-update-resource:
        get-rollout-status: true
        resource-file-path: manifests\kustomization.yaml
        resource-name: deployment\<<parameters.cluster-name>>
        show-kubectl-command: true

workflows:
  default:
    jobs:
      - build
      - build-push-image:
          requires: 
            - build   
      - aws-eks/create-cluster:  
          cluster-name: $IMAGE_TAG-cluster
          requires: 
            - build-push-image
      - deploy-cluster:
          cluster-name: $IMAGE_TAG-cluster
          requires:
            - aws-eks/create-cluster
      # - aws-eks/delete-cluster:
      #     cluster-name: $IMAGE_TAG-cluster
      #     requires:
      #       - test-cluster
      # - deploy:
      #     requires: 
      #       - test-cluster    